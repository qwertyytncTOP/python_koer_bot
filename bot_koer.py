import logging
import json
import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile, InputMediaPhoto
from aiogram.filters import Command, CommandObject









# Настройка логирования
logging.basicConfig(level=logging.INFO)

# Инициализация бота и диспетчера
API_TOKEN = '8346555563:AAHeRPnEbahcVXcSh4Qa2Rt3a-5icomr5mQ'  # Замените на ваш токен
ADMIN_ID = ['667398225', '998084496']  # Замените на ID админа
bot = Bot(token=API_TOKEN)
dp = Dispatcher(storage=MemoryStorage())




inlines = ['ПРАВИЛЬНОЕ НАЧАЛО ЛЮБОГО ДИАЛОГА', 'ЧТО НИ В КОЕМ СЛУЧАЕ НЕЛЬЗЯ ПИСАТЬ!', 'ГОТОВЫЕ ПРАВИЛЬНЫЕ ОФФЕРЫ (предложения)!', 'НЕ ИНТЕРЕСНО!', 'ТЫ СКАМ / ГДЕ ГАРАНТИИ?', 'МАЛО ПЛАТИШЬ!', 'МНЕ НЕ НУЖНА ЕЩЕ ОДНА КАРТА!', 'КАКАЯ ТВОЯ ВЫГОДА?', 'УЖЕ ЕСТЬ КАРТА ЭТОГО БАНКА!', 'МНЕ ПРЕДЛАГАЛИ БОЛЬШЕ!', 'ЧТО ДЕЛАТЬ, ЕСЛИ У ЧЕЛОВЕКА ЕСТЬ ВСЕ ПРОДУКТЫ?']

hi_message = '''Привет, этот бот \- твой помощник в мире мотивированного трафика\!

*Как он работает\?*

Ты пишешь человеку, чтобы предложить ему оформить тот или иной продукт по твоей ссылке с партнёрки, но каждый раз ты сталкиваешься с разными возражениями по типу\: 
\- _«Мне не нужна карта»_
\- _«Мало платишь»_
\- _«Не интересно»_
И тому подобные возражения\!

Чтобы тебе было легче запомнить как отрабатывать эти возражения и получить навыки, ты заходишь в этого бота, нажимаешь нужную тебе кнопку и видишь, как лучше всего отработать именно это возражение и почему правильно это сделать именно так\!

*Удачной работы\!*'''

text1 = '''*1\. ПРАВИЛЬНОЕ НАЧАЛО ЛЮБОГО ДИАЛОГА*

*Первый диалог \- неправильный пример, разберем почему\:*

\- Мотивщик сразу спрашивает, есть ли карта такого\-то банка, предварительно не узнав, интересно ли вообще человеку заработать, а так же сколько ему лет и с какого он города, узнавать это нужно, чтобы в дальнейшем эффективнее отрабатывать возражения, т\.к на 18 летнего студента рычаги, которые действуют на 35 летнего семьянина, действовать не будут, к каждому человеку свой подход

\- *Неправильный оффер*\: 
Слово «взамен» нужно заменить на «заплачу», вы ничем не меняетесь с человеком, вы ему платите\!

Слово «средства» нужно заменить на «деньги», да, значение одно и тоже, но когда человек слышит слово «деньги», у него немного другое восприятие 

Нету уточнений, что карту не нужно продавать или давать доступы, человек может подумать, что ему пишут мошенники 

«Сделаем\?» это вопрос, его нужно заменить на призыв к действию «Давай сделаем\?»

*Второй диалог \- правильный пример, разберем почему\:*

\- Мотивщик сначала интересуется, интересно ли человеку заработать, подчеркивет, что все по белому, дает понять на какую сумму стоит рассчитывать и сколько времени все займет, так же обозначает где он нашел человека, чтобы у него было меньше сомнений

\- Мотивщик спрашивает сколько лет человеку и откуда он, чтобы понимать, подходит ли ему человек \(мы работаем с людьми от 18 лет\), а так же чтобы в будущем при отработке возвращений отрабатывать их правильнее, т\.к выше я писал, что отработка возражений у 18 летного студента и 35 летнего отца двоих детей будет разная

\- *Правильный оффер\:*
С первых слов уточняется, что карта бесплатная, обозначается конкретная сумму и условия ее получения 

Убираем основные сомнения человека, которые могут возникнуть словами «Никаких данных, доступов и т\.д не нужно, карта остается у тебя на руках», так мы даем понять, что нам не нужны данные человека и через карту не будет проходить никаких денег 

В конце стоит призыв к действию, а не вопрос'''

text2 = '''*2\. ЧТО НИ В КОЕМ СЛУЧАЕ НЕЛЬЗЯ ПИСАТЬ\!*

*1\) Никогда нельзя давать на выбор сразу несколько вариантов\!*

*Например\:* «Давай оформим дебетовку либо от втб, либо от Тинькофф или Газпрома», всегда нужно предлагать один продукт и уже после выплаты, когда у человека обрадовалось доверие, можно предлагать остальное

*2\) Нельзя быть слишком вежливым\!*

*Например\:* «Можно поинтересоваться, сколько тебе лет и с какого ты города\?» или «Подскажи пожалуйста, пользуешься ли ты картой Газпрома\?»
Но и грубым тоже быть не нужно, например\: «Я тебе вопрос задаю, на него отвечай» 

*3\) Нельзя оправдываться\!*

Запомни, отработка возражений и оправдание это разные вещи\!

*Например\:* Человек пишет тебе «А какая тебе выгода, зачем тебе мне платить\?»

*Отработка возражения это* «Мне заплатит банк за нового клиента, половину из этих денег я закину тебе»

*Оправдание это* «Я тебе заплачу, потому что я работаю на партнерках с разными банками, привожу им людей, а они мне платят деньги за новых клиентов, часть из этих денег я заплачу себе, а часть из них я заберу себе, когда банк мне заплатит за тебя»

Суть одна и та же, но звучит абсолютно по разному, когда ты начинаешь оправдываться, ты встаешь в слабую позицию, этого допускать ни в коем случае нельзя\!

*4\) Нельзя писать то, что не можешь дать\!*

Никогда нельзя в первом сообщении писать «Заплачу тебе до 5000₽», а в итоге кидать оффер на 700₽, потому что у человека возникнет логичный вопрос\: «а где еще 4300₽\?», ты ему начнешь говорить, что у тебя еще много продуктов, которые можно оформить и если их все оформить, то выйдет как раз таки 5000₽, но исходя из первого пункта мы помни, что про остальные продукты говорить и предлагать лучше всего после выплаты, когда у человека повысилось довери\!'''

text3 = '''*3\. ГОТОВЫЕ ПРАВИЛЬНЫЕ ОФФЕРЫ \(предложения\)\!*

*Дебетовые карты\:*

Давай сделаем бесплатную дебетовую карту от \(название банка\), после активации покупкой я тебе заплачу \(сумма₽\) 

От тебя никаких данных, доступов и т\.п мне от тебя не нужно, карта остается у тебя на руках

Давай сделаем\?
———————————————

*Кредитные карты\:*

Давай сделаем бесплатную кредитную карту без \% от \(_название банка_\), после активации покупкой я тебе заплачу \(_сумма₽_\)

Тратить с нее все деньги и потом их возвращать не нужно, сделал покупку, например на 100₽, получил от меня деньги и сразу эти 100₽ вернул, долгов никаких нет

Данных, доступов и т\.д мне от тебя не нужно, карта остается у тебя на руках, можно будет без проблем её закрыть 

Давай сделаем\?
———————————————

*МФО без \% \(займы без \% на первый займ\)\:*

Предлагаю взять займ без \% в конторе \(_название конторы_\) на сумму \(_сумма на которую нужно взять займ_\) и через \(_количество дней_\) отдать его обратно без \%
Как только возьмешь, я тебе сразу заплачу \(_сумма₽_\)

Никаких долгов у тебя нет, ты отдаешь ровно ту сумму, которую взял, она просто лежит у тебя на карте и через \(_количество дней_\) ты эти же деньги отдашь обратно

Никаких данных, доступов и т\.д от тебя не нужно

Давай сделаем\?
———————————————

*ИП и РКО\:*

Давай откроем тебе ИП от \(_название банка_\) на НПД \(это такой вид налогообложения, по факту та же самая самозанятость, можешь проверить в интернете и убедиться, страшного ничего нет\)

*Никаких налогов, комиссий и страховых взносов платить не нужно, т\.к на НПД они не берутся*

ИП \- это просто статус, он ни к чему не обязывает, тем более на НПД

После открытия и активации я тебе заплачу \(_сумма₽_\)
Еще после открытия на ИП можно будет открыть несколько бесплатных расчетных счетов, за каждый я тебе заплачу от \(_сумма₽_\) до \(_сумма₽_\)

После выплаты все можно будет легко закрыть, никаких денег за это не возьмут и все сделают за тебя

Давай сделаем\?'''

text4 = '''*4\. НЕ ИНТЕРЕСНО\!*

Самое частое, что ты слышишь после того, как скинул оффер \- *НЕ ИНТЕРЕСНО\!
Оно же\: не хочу, нет, не надо и все другие варианты отказа человек после того, как он прочитал оффер

Какие ошибки мы видим на неправильных скринах\?

1\) На первом скрине нет ничего, что связно с отработкой возражения\.*

Тут в принципе нет отработки возражения, тут есть только описание того, что нужно сделать и утверждение того, что человек ничего не потеряет

*2\) Не узнал причину отказа\.*

Нет вопроса «почему\?», «в чем сомнения\?» и любая другая вариация слов, чтобы узнать у человека причину отказа

«Не интересно» понятие обширное, нам нужно понять истинную причину и работать уже непосредственно с ней\!

*3\) Утверждение, вместо вопроса\.*

Утверждениями ты можешь говорить, когда говоришь про свой продукт и про себя, в остальных случаях ты должен задавать вопросы, которые приведут тебя к нужному результату или же маскировать свои утверждения в вопросы

*Например человек тебе говорит\: «Нет, спасибо, не интересно»*

*Вместо того*, чтобы сказать *«ты ничего не теряешь»*, попробуй завернуть это утверждение в вопрос: *«Почему? Карта бесплатная, ты ничего не теряешь и деньги явно лишними не будут, правильно\?»*

Словом «*правильно\?*» ты все свое утверждение преподнес как вопрос, на который человек тебе ответит с вероятность на 95% больше, чем на утверждение\!

*4\. Нет призыва к действию\.*

У тебя всегда должен быть призыв к действию, даже если ты все объяснил человеку так, что у него не осталось больше никаких сомнений, ты должен призвать к действию, например «Давай сделаем?», «Давай попробуем», «Давай сейчас ссылку закину, подашь заявку»

Когда человек не видит призыва к действию, он может прочитать, ему все понравится, но он просто уйдет в игнор, поэтому призыв быть всегда\!

*Важно помнить\: вопрос и призыв это разные вещи\!
«Сделаем\?» \- это вопрос, «Давай сделаем\?» \- это призыв к действию\!*

*5\. Сказано лишнее\.*

Фраза «Мне банк даст бонус за нового клиента, тебе на карту \+1к на счет» абсолютно тут не уместна, т\.к человек не спрашивает зачем ты ему предлагаешь, в данный момент он имеет сомнения, которые тебе необходимо раскрыть и убрать

Это называется угадайка\: «Наверное он не понимает зачем мне это и по этому отказывается, напишу ка я ему об этом и сомнения отпадут»

*В угадайку мы не играем\.*

Отсюда делаем вывод: Не выдумывай у себя в голове вопрос и не отвечай на него, отвечай только на то, о чем клиент тебя спрашивает

Почему правильный скрин правильный\?

1\. Есть вопрос «Почему\?», его можно заменить на «В чем сомнения?», «Почему отказываетесь» и любая другая вариация вопроса «Почему\?»

2\. Есть напоминание, что еще несколько минут назад человеку было интересно заработать эти деньги

3\. Есть утверждение, которое завуалировано в вопрос про то, что деньги лишними не будут

*Как итог \- мы получаем от человека его истинное возражение и работаем уже непосредственно с ним, а не угадываем сами в чем причина отказа\!*'''

text5 = '''*5\. ТЫ СКАМ / ГДЕ ГАРАНТИИ\?*

Почему я написал именно так\?

1\) Первая фраза \- *«Мне нет смысла тебя кидать»*, это утверждение, которое мне нужно объяснить

2\) После утверждения идет логичное объяснение, почему утверждение верное

Я показываю то, что кинув его я заработаю меньше, поэтому мне намного выгоднее работать честно

3\) Спрашиваю мнение человека *«Логично рассуждаю\?»*

Делаю я это для того, чтобы он ответил *«Да»*, тем самым у себя в голове подтвердил, что моя точка зрения верная и мне действительно выгоднее работать честно

Если я не задам этот вопрос, то человек скорее всего поймет мою позицию, но у себя в голове  вероятнее всего не подтвердит, что мне выгодно работать с ним честно, поэтому лучше такого рода вопросы задавать, чтобы человек у себя в голове легче соглашался с вашей позицией\!'''



text7 = '''*7\. МНЕ НЕ НУЖНА ЕЩЕ ОДНА КАРТА\!*

Почему я так ответил\?

*1\) Дал понять, что карта бесплатная и человек ничего не теряет, при этом не сказал об этом сам, вместо этого я заставил человека это сказать\.*

Я\: «Сколько ты платишь за обслуживание своих карт\?»
Клиент\: «0, они бесплатные»

*2\) Задал вопрос и подчеркнул, то что это такая же карта, как и у него\.*

«А чем тогда тебе помешает еще одна бесплатная карта\?»

*3\) Сделал акцент на том, что карту можно закрыть\.*

«Получил выплату и закрыл, пользоваться не надо»

*4\) Призыв к действию\.*

«Давай сделаем\?»'''

text8 = '''*8\. КАКАЯ ТВОЯ ВЫГОДА\?*

Почему я так ответил\?

*1\) Отвечаю, но не оправдываюсь\.*

Я бы мог написать что\-то типо\: _«Ну я с банками работаю, привожу им клиентов по ссылкам, а они мне платят за каждого деньги, я часть из этих денег тебе даю за то, что ты по моей ссылке оформил»_

Но я так не напишу, потому что это звучит как будто ты оправдываешься\!

Ответ на вопрос не будет выглядеть как оправдание, если ты ответишь четко кратко, максимально информативно и понятно, что я и сделал

*НИКОГДА НЕ ОПРАВДЫВАЙСЯ ПЕРЕД КЛИЕНТОМ\!*

*2\) Подчеркнул важные детали\.*

Я напомнил, что карта бесплатная, мне не нужны данные и человек не отдает мне эту карту

*3\) Призыв к действию\.*

«Давай сделаем\?»'''

text9 = '''*9\. УЖЕ ЕСТЬ КАРТА ЭТОГО БАНКА\!*

Почему я так ответил\?

*1\. Вопрос с заведомо понятным ответом «Да»\.*

«Тогда ты знаешь, что она полностью бесплатная, денег не просит, верно\?»

*2\. Стандартный оффер с показом сходства\.*

«Давай сделаем точно такую же бесплатно дебетовую карту»

Человек сначала подтвердил, что карта полностью бесплатная и после этого я ему предлагаю сделать такую же бесплатную, соответственно бояться, что с него возьмут деньги он не будет\!'''

text10 = '''*10\. МНЕ ПРЕДЛАГАЛИ БОЛЬШЕ\!*

Почему я так ответил\?

1\) Вначале я дал человеку понять, что бесплатный сыр бывает только в мышеловке, в минус себе работать никто не будет, если обещают больше рынка, то скорее всего заскамят

2\) Спросил человека как бы он поступил, чтобы он применил эту ситуацию на себе и мои слова ему стали ближе

3\) Задал вопрос, на который заранее знаю ответ, человек ответит либо «Не знаю, наверное не будет» либо «Ну да, в минус работать себе никто не будет»

4\) После того, как человек понял, что я плачу меньше, но честно, я спокойно могу сделать призыв к действию, продублировать важную инфу \(карта бесплатная, оплата сразу после активации и т\.п\) и закрыть очередного лида, который принесет мне деньги\!'''

text11 = '''*11\. ЧТО ДЕЛАТЬ, ЕСЛИ У ЧЕЛОВЕКА ЕСТЬ ВСЕ ПРОДУКТЫ\?*

Если у человека есть все, что бы ты ему не предложил, то у тебя два варианта кто перед тобой\:

1\) Дроп, который продал свои карты под крипту 

2\) Человек, которого открутил другой мотивщик либо он сам себя открутил по ссылкам с приложений

И обоих вариантов правильным решением будет предложить человеку приводить тебе своих друзей, родственников, знакомых и зарабатывать с этого 

*Совет 1\: *
Не жадничай, хорошо платишь \- хорошо приводят

*Совет 2\:*
Плати тому, кто приводит, пусть сам раскидается с тем, кого он привел

Одно дело ты скажешь «500₽ тебе и 500₽ тому, кого привел»

Совсем другое дело, если ты скажешь «Я плачу тебе 1000₽ за человека, как их с ним делить ты решаешь сам», сумма звучит больше, хотя никак не меняется 

*Совет 3\:*
Проси того, кто привел, создать беседу с ним, тобой и человеком, которого привели, так ты сможешь еще лучше раскачать сарафанку

Если не создавать беседу, то рано или поздно у человека, которому ты платишь деньги за приглашение людей, эти самые люди закончатся и цепочка оборвется

Если же ты создаешь беседы со всеми, кого он привел, то ты каждый раз можешь писать напрямую в лс тому, кого привели и предложить так же приводить тебе людей
Цепочка по опыту будет развиваться довольно быстро 

*Совет 4\:*
Если тебе привели человека на ВТБ дебетовку, не нужно в тихую только ему еще продукту, скрывая это от того, кто привел

Рано или поздно он узнает это и не будет с тобой работать, а тот, кому ты в тихую предложишь и подавно с тобой на долгосрок не будет работать, потому что будет понимать, что с людьми, которые он приведет будет тоже самое и скрывать уже ты будешь от него\.

Закинь копейку тому, кто привел, ты не обеднеешь и лояльность сохранишь, репутацию поднимешь и с тобой захотят работать дальше\!'''


emoji = [['🕧','🕐','🕜','🕑','🕝','🕒','🕞','🕓','🕟','🕔','🕠','🕕','🕡','🕖','🕢','🕗','🕣','🕘','🕤','🕙','🕥','🕚','🕦','🕛'],
         ['💰','💸','👛','🤑','💲','💵','💴','💶','💷','💎']]

# Путь к файлу для хранения разрешённых пользователей
USERS_FILE = 'users.json'
ALL_USERS_FILE = 'all_users.json'
# Функция для загрузки списка разрешённых пользователей
def load_allowed_users():
    if os.path.exists(USERS_FILE):
        with open(USERS_FILE, 'r') as f:
            return json.load(f)  # Возвращает словарь {user_id: username}
    return {}

def load_all_users():
    if os.path.exists(ALL_USERS_FILE):
        with open(ALL_USERS_FILE, 'r') as f:
            return json.load(f)  # Возвращает словарь {username: user_id}
    return {}

# Функция для сохранения списка разрешённых пользователей
def save_allowed_users(allowed_users):
    with open(USERS_FILE, 'w') as f:
        json.dump(allowed_users, f, indent=2)

# Загружаем разрешённых пользователей при старте
allowed_users = load_allowed_users()
all_users = load_all_users()
ids = {}
with open('ids.json', 'r') as f:
    ids = json.load(f)
# Создание основной клавиатуры с двумя кнопками
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="ПСИХОЛОГИЯ ПРОДАЖ")]
    ],
    resize_keyboard=True
)

# Создание инлайн-клавиатуры для первой кнопки (12 кнопок)
inline_keyboard1 = InlineKeyboardMarkup(inline_keyboard=[])
for j in inlines:
    inline_keyboard1.inline_keyboard.append([InlineKeyboardButton(text=f"{j}", callback_data=f"inline_{inlines.index(j)}")])

def get_emoji(number):
    hours_index = (number - 1 )//10 # Индекс эмодзи в списке часов
    money_index = (number - 1 )%10

    result = [
        emoji[0][hours_index],  # Эмодзик для часов
        emoji[1][money_index]  # Эмодзик для денег
    ]

    return result


def get_number_by_emoji(hour_emoji, money_emoji):

    # Найдем индекс эмодзи часов в списке
    hour_index = emoji[0].index(hour_emoji)

    # Найдем индекс эмодзи денег в списке
    money_index = emoji[1].index(money_emoji)

    # Вычислим число на основе индексов
    number = hour_index * 10 + (money_index + 1)

    return number
# Функция проверки доступа
def check_access(user_id):
    return user_id in ADMIN_ID or str(user_id) in allowed_users

# Функция для получения юзернейма по ID
async def get_username_by_id(user_id: str):
    try:
        chat = await bot.get_chat(user_id)
        return chat.username if chat.username else "Нет юзернейма"
    except Exception as e:
        logging.error(f"Ошибка при получении юзернейма для ID {user_id}: {e}")
        return "Неизвестный юзернейм"

# Функция для получения ID по юзернейму
async def get_user_id_by_username(username: str):
    try:
        chat = all_users[username]
        return str(chat)
    except Exception as e:
        logging.error(f"Ошибка при получении ID для {username}: {e}")
        return None

# Обработчик команды /start
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    user_id = str(message.from_user.id)
    username = message.from_user.username if message.from_user.username else await get_username_by_id(user_id)

    if not check_access(user_id):
        await message.answer("У вас нет доступа к боту. Обратитесь к администратору @Koer4")
        all_users[username] = user_id

        with open(ALL_USERS_FILE, 'w') as f:
            f.write(json.dumps(all_users))
        # Уведомляем админа о попытке доступа
        for ad in ADMIN_ID:
            inline_keyboard_add = InlineKeyboardMarkup(inline_keyboard=[])
            inline_keyboard_add.inline_keyboard.append([InlineKeyboardButton(text=f"добавить", callback_data=f"adduser {username} {user_id}")])
            await bot.send_message(
                ad,
                f"Пользователь @{username} (ID: {user_id}) пытался получить доступ к боту", reply_markup=inline_keyboard_add
            )
        return
    await message.answer(hi_message, reply_markup=main_keyboard, parse_mode='markdownv2')

# Обработчик нажатия на первую кнопку
@dp.message(lambda message: message.text == "ПСИХОЛОГИЯ ПРОДАЖ")
async def button1_pressed(message: types.Message):
    user_id = str(message.from_user.id)
    if not check_access(user_id):
        await message.answer("У вас нет доступа к боту.")
        return
    await message.answer("ВЫБИРАЙ!", reply_markup=inline_keyboard1)



@dp.callback_query(lambda c: c.data.startswith('user'))
async def process_inline_button(callback_query: types.CallbackQuery):
    user_id = str(callback_query.from_user.id)
    if not check_access(user_id):
        await callback_query.message.answer("У вас нет доступа к боту.")
        await callback_query.answer()
        return

    callback_data = callback_query.data
    username = callback_data.split(' ')[1]
    user_id = next((uid for uid, uname in allowed_users.items() if uname == username), None)
    if user_id:
        allowed_users.pop(user_id)
        save_allowed_users(allowed_users)
        await callback_query.message.answer(f"Пользователь {username} (ID: {user_id}) удалён из списка разрешённых.")
        await callback_query.answer()
    else:
        await callback_query.message.answer(f"Пользователь {username} не найден в списке разрешённых.")
        await callback_query.answer()

@dp.callback_query(lambda c: c.data.startswith('adduser'))
async def process_inline_button(callback_query: types.CallbackQuery):
    user_id = str(callback_query.from_user.id)
    if not check_access(user_id):
        await callback_query.message.answer("У вас нет доступа к боту.")
        await callback_query.answer()
        return

    callback_data = callback_query.data
    username = callback_data.split(' ')[1]
    user_id = callback_data.split(' ')[2]

    max_id = ids['max']
    ids[int(user_id)] = max_id + 1
    ids['max'] = max_id + 1
    with open('ids.json', 'w') as f:
        f.write(json.dumps(ids))



    allowed_users[user_id] = username
    save_allowed_users(allowed_users)
    await callback_query.message.answer(f"Пользователь {username} (ID: {user_id}) добавлен в список разрешённых.")
    await callback_query.answer()


# Обработчик нажатий на инлайн-кнопки
@dp.callback_query(lambda c: c.data.startswith('inline'))
async def process_inline_button(callback_query: types.CallbackQuery):
    user_id = str(callback_query.from_user.id)
    user_id_por = ids[user_id]
    if not check_access(user_id):
        await callback_query.message.answer("У вас нет доступа к боту.")
        await callback_query.answer()
        return

    callback_data = callback_query.data
    button_number = int(callback_data.split('_')[1])+1
    a = get_emoji(user_id_por)
    print(user_id_por, a)

    text6 = f'''*6\. МАЛО ПЛАТИШЬ\!*

Почему я так ответил\?

*1\) Сравнение\.*

Я спросил человека сколько он зарабатывает в день, чтобы сравнить его дневной доход с тем доходом, который я могу предложить ему за 10 минут {a[0]}, чтобы у себя в голове он понял, что за сумму не сильно больше той, которую я предлагаю, он работает целый день, а тут потратит всего лишь 10 минут 

*2\) Согласие\.*

Я согласился, что 700₽ ему погоды не сделает, как он и написал

*3\) Пример\.*

Яркий пример с потерей
денег в виде сжигания купюр, чтобы человек под словом «потерять» представлял в прямом смысле этого слова потеряю денег, а не  воспринимал это слово как пустой звук

*4\) Вопрос\.*

Зачем тогда сейчас терять эти деньги? {a[1]}

*5\) Подчеркивание деталей\.*

«Карта бесплатная», «от тебя денег не нужно»'''

    texts_1 = [text1, text2, text3, text4, text5, text6, text7, text8, text9, text10, text11]
    # Формируем список возможных путей к фотографиям
    photo_paths = [
        f"photo/photo{button_number}_{i}.jpg" for i in range(3)
    ]

    # Проверяем, какие файлы существуют
    existing_photos = [path for path in photo_paths if os.path.exists(path)]

    try:
        # Отправляем фотографии, если они есть
        if existing_photos:
            media = [
                InputMediaPhoto(media=FSInputFile(path=path)) for path in existing_photos
            ]
            await bot.send_media_group(
                chat_id=callback_query.message.chat.id,
                media=media,
                protect_content=True
            )

        # Отправляем текст, даже если фотографий нет
        await bot.send_message(
            chat_id=callback_query.message.chat.id,
            text=texts_1[button_number-1],
            parse_mode='MarkdownV2',
            protect_content=True
        )

    except Exception as e:
        logging.error(f"Ошибка при отправке сообщений: {e}")
        await callback_query.message.answer("Произошла ошибка при отправке контента.")

    await callback_query.answer()

# Команды админа



@dp.message(Command("users"))
async def list_users(message: types.Message):
    if not str(message.from_user.id) in ADMIN_ID:
        await message.answer("Вы не администратор!")
        return
    if allowed_users:
        inline_keyboard_users = InlineKeyboardMarkup(inline_keyboard=[])
        for user in allowed_users:  # Изменено с range(1, 7) на range(1, 8) для 7 кнопок
            username = allowed_users[user]
            inline_keyboard_users.inline_keyboard.append([InlineKeyboardButton(text=f"{username}", callback_data=f"user {username}")])
        await message.answer("Разрешённые пользователи:\n", reply_markup=inline_keyboard_users)
    else:
        await message.answer("Список разрешённых пользователей пуст.")

@dp.message(Command("find"))
async def list_users(message: types.Message, command: CommandObject):
    if not str(message.from_user.id) in ADMIN_ID:
        await message.answer("Вы не администратор!")
        return

    args = command.args
    try:
        emoji1 = args.split('-')[0]
        emoji2 = args.split('-')[1]

        id = get_number_by_emoji(emoji1, emoji2)
        print(id)
        for a in ids:
            if ids[a] == id:
                user_id = str(a)
                print(user_id)
        username = allowed_users[user_id]
        allowed_users.pop(user_id)
        save_allowed_users(allowed_users)
        await message.answer(f"Пользователь {username} (ID: {user_id}) удалён из списка разрешённых.")


    except Exception as e:
        print(e)
        await message.answer( text="Нужно вводить эмоджи по маске /find emoji1-emoji2")

# Запуск бота
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())